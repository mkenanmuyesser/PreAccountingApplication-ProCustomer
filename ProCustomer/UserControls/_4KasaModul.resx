<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAra.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAANMmlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNC4yLjItYzA2MyA1My4zNTI2MjQsIDIwMDgvMDcvMzAtMTg6MDU6NDEgICAgICAgICI+CiA8cmRm
        OlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMi
        PgogIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwu
        b3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICB4bWxuczp4bXBSaWdodHM9Imh0dHA6Ly9ucy5hZG9iZS5j
        b20veGFwLzEuMC9yaWdodHMvIgogICAgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29t
        L3Bob3Rvc2hvcC8xLjAvIgogICAgeG1sbnM6SXB0YzR4bXBDb3JlPSJodHRwOi8vaXB0Yy5vcmcvc3Rk
        L0lwdGM0eG1wQ29yZS8xLjAveG1sbnMvIgogICB4bXBSaWdodHM6V2ViU3RhdGVtZW50PSIiCiAgIHBo
        b3Rvc2hvcDpBdXRob3JzUG9zaXRpb249IiI+CiAgIDxkYzpyaWdodHM+CiAgICA8cmRmOkFsdD4KICAg
        ICA8cmRmOmxpIHhtbDpsYW5nPSJ4LWRlZmF1bHQiLz4KICAgIDwvcmRmOkFsdD4KICAgPC9kYzpyaWdo
        dHM+CiAgIDxkYzpjcmVhdG9yPgogICAgPHJkZjpTZXE+CiAgICAgPHJkZjpsaS8+CiAgICA8L3JkZjpT
        ZXE+CiAgIDwvZGM6Y3JlYXRvcj4KICAgPGRjOnRpdGxlPgogICAgPHJkZjpBbHQ+CiAgICAgPHJkZjps
        aSB4bWw6bGFuZz0ieC1kZWZhdWx0Ij5zZWFyY2g8L3JkZjpsaT4KICAgIDwvcmRmOkFsdD4KICAgPC9k
        Yzp0aXRsZT4KICAgPHhtcFJpZ2h0czpVc2FnZVRlcm1zPgogICAgPHJkZjpBbHQ+CiAgICAgPHJkZjps
        aSB4bWw6bGFuZz0ieC1kZWZhdWx0Ii8+CiAgICA8L3JkZjpBbHQ+CiAgIDwveG1wUmlnaHRzOlVzYWdl
        VGVybXM+CiAgIDxJcHRjNHhtcENvcmU6Q3JlYXRvckNvbnRhY3RJbmZvCiAgICBJcHRjNHhtcENvcmU6
        Q2lBZHJFeHRhZHI9IiIKICAgIElwdGM0eG1wQ29yZTpDaUFkckNpdHk9IiIKICAgIElwdGM0eG1wQ29y
        ZTpDaUFkclJlZ2lvbj0iIgogICAgSXB0YzR4bXBDb3JlOkNpQWRyUGNvZGU9IiIKICAgIElwdGM0eG1w
        Q29yZTpDaUFkckN0cnk9IiIKICAgIElwdGM0eG1wQ29yZTpDaVRlbFdvcms9IiIKICAgIElwdGM0eG1w
        Q29yZTpDaUVtYWlsV29yaz0iIgogICAgSXB0YzR4bXBDb3JlOkNpVXJsV29yaz0iIi8+CiAgPC9yZGY6
        RGVzY3JpcHRpb24+CiA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAK
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
        ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAg
        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
        oLLkAJQAAAAASUVORK5CYII=
</value>
  </data>
</root>